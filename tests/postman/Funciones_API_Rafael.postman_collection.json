{
	"info": {
		"_postman_id": "e3d4da85-a3ea-4652-88c9-c0a0d9f6bba9",
		"name": "Funciones_API_Rafael",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Read Root",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/?",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						""
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				}
			},
			"response": [
				{
					"name": "Successful Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				}
			]
		},
		{
			"name": "Read Sumar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar resultado\", function (){\r",
							"    var jsonData = pm.response.json()\r",
							"    pm.expect(jsonData[\"El resultado es \"]).to.eql(pm.iterationData.get(\"result\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/sumar?num1=4&num2=14",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"sumar"
					],
					"query": [
						{
							"key": "num1",
							"value": "4"
						},
						{
							"key": "num2",
							"value": "14"
						}
					]
				}
			},
			"response": [
				{
					"name": "Successful Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sumar?num1=0&num2=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sumar"
							],
							"query": [
								{
									"key": "num1",
									"value": "0"
								},
								{
									"key": "num2",
									"value": "0"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				},
				{
					"name": "Validation Error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sumar?num1=0&num2=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sumar"
							],
							"query": [
								{
									"key": "num1",
									"value": "0"
								},
								{
									"key": "num2",
									"value": "0"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"detail\": [\n  {\n   \"loc\": [\n    \"eu proident\",\n    \"irure tempor in Duis\"\n   ],\n   \"msg\": \"nisi exercitation sint Duis\",\n   \"type\": \"do\"\n  },\n  {\n   \"loc\": [\n    \"velit est\",\n    \"fugiat adipisicing\"\n   ],\n   \"msg\": \"enim dolor quis voluptate\",\n   \"type\": \"offic\"\n  }\n ]\n}"
				}
			]
		},
		{
			"name": "Read Restar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar resultado\", function (){\r",
							"    var jsonData = pm.response.json()\r",
							"    pm.expect(jsonData[\"El resultado es \"]).to.eql(pm.iterationData.get(\"result\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restar?num1={{num1}}&num2={{num2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restar"
					],
					"query": [
						{
							"key": "num1",
							"value": "{{num1}}"
						},
						{
							"key": "num2",
							"value": "{{num2}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Successful Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restar?num1=0&num2=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restar"
							],
							"query": [
								{
									"key": "num1",
									"value": "0"
								},
								{
									"key": "num2",
									"value": "0"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				},
				{
					"name": "Validation Error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restar?num1=0&num2=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restar"
							],
							"query": [
								{
									"key": "num1",
									"value": "0"
								},
								{
									"key": "num2",
									"value": "0"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"detail\": [\n  {\n   \"loc\": [\n    \"et commodo dolore nisi proident\",\n    \"in sint adipisicing laboris\"\n   ],\n   \"msg\": \"commodo sint culpa est in\",\n   \"type\": \"Lorem ut\"\n  },\n  {\n   \"loc\": [\n    \"Duis proident dolor\",\n    \"cupidatat dolor\"\n   ],\n   \"msg\": \"labore veniam sint\",\n   \"type\": \"ex veniam\"\n  }\n ]\n}"
				}
			]
		},
		{
			"name": "Read Multiplicar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar resultado\", function (){\r",
							"    var jsonData = pm.response.json()\r",
							"    pm.expect(jsonData[\"El resultado es \"]).to.eql(pm.iterationData.get(\"result\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/multiplicar?num1={{num1}}&num2={{num2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"multiplicar"
					],
					"query": [
						{
							"key": "num1",
							"value": "{{num1}}"
						},
						{
							"key": "num2",
							"value": "{{num2}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Successful Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/multiplicar?num1=0&num2=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"multiplicar"
							],
							"query": [
								{
									"key": "num1",
									"value": "0"
								},
								{
									"key": "num2",
									"value": "0"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				},
				{
					"name": "Validation Error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/multiplicar?num1=0&num2=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"multiplicar"
							],
							"query": [
								{
									"key": "num1",
									"value": "0"
								},
								{
									"key": "num2",
									"value": "0"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"detail\": [\n  {\n   \"loc\": [\n    \"et commodo dolore nisi proident\",\n    \"in sint adipisicing laboris\"\n   ],\n   \"msg\": \"commodo sint culpa est in\",\n   \"type\": \"Lorem ut\"\n  },\n  {\n   \"loc\": [\n    \"Duis proident dolor\",\n    \"cupidatat dolor\"\n   ],\n   \"msg\": \"labore veniam sint\",\n   \"type\": \"ex veniam\"\n  }\n ]\n}"
				}
			]
		},
		{
			"name": "Read Dividir",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar resultado\", function (){\r",
							"    var jsonData = pm.response.json()\r",
							"    pm.expect(jsonData[\"El resultado es \"]).to.eql(pm.iterationData.get(\"result\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/dividir?num1={{num1}}&num2={{num2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dividir"
					],
					"query": [
						{
							"key": "num1",
							"value": "{{num1}}"
						},
						{
							"key": "num2",
							"value": "{{num2}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Successful Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dividir?num1=0&num2=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dividir"
							],
							"query": [
								{
									"key": "num1",
									"value": "0"
								},
								{
									"key": "num2",
									"value": "0"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{}"
				},
				{
					"name": "Validation Error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dividir?num1=0&num2=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dividir"
							],
							"query": [
								{
									"key": "num1",
									"value": "0"
								},
								{
									"key": "num2",
									"value": "0"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"detail\": [\n  {\n   \"loc\": [\n    \"et commodo dolore nisi proident\",\n    \"in sint adipisicing laboris\"\n   ],\n   \"msg\": \"commodo sint culpa est in\",\n   \"type\": \"Lorem ut\"\n  },\n  {\n   \"loc\": [\n    \"Duis proident dolor\",\n    \"cupidatat dolor\"\n   ],\n   \"msg\": \"labore veniam sint\",\n   \"type\": \"ex veniam\"\n  }\n ]\n}"
				}
			]
		},
		{
			"name": "Formato general",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar resultado\", function (){\r",
							"    var jsonData = pm.response.json()\r",
							"    pm.expect(jsonData[\"El resultado es \"]).to.eql(pm.iterationData.get(\"result\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/{{funcion}}?num1={{num1}}&num2={{num2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{funcion}}"
					],
					"query": [
						{
							"key": "num1",
							"value": "{{num1}}"
						},
						{
							"key": "num2",
							"value": "{{num2}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/",
			"type": "string"
		}
	]
}